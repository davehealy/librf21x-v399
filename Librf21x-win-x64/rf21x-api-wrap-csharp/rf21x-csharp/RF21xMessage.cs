//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class RF21xMessage : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal RF21xMessage(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(RF21xMessage obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~RF21xMessage() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          rf21xPINVOKE.delete_RF21xMessage(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public int messageType {
    set {
      rf21xPINVOKE.RF21xMessage_messageType_set(swigCPtr, value);
    } 
    get {
      int ret = rf21xPINVOKE.RF21xMessage_messageType_get(swigCPtr);
      return ret;
    } 
  }

  public int quizType {
    set {
      rf21xPINVOKE.RF21xMessage_quizType_set(swigCPtr, value);
    } 
    get {
      int ret = rf21xPINVOKE.RF21xMessage_quizType_get(swigCPtr);
      return ret;
    } 
  }

  public int quizNumber {
    set {
      rf21xPINVOKE.RF21xMessage_quizNumber_set(swigCPtr, value);
    } 
    get {
      int ret = rf21xPINVOKE.RF21xMessage_quizNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int timeStamp {
    set {
      rf21xPINVOKE.RF21xMessage_timeStamp_set(swigCPtr, value);
    } 
    get {
      int ret = rf21xPINVOKE.RF21xMessage_timeStamp_get(swigCPtr);
      return ret;
    } 
  }

  public int keypadId {
    set {
      rf21xPINVOKE.RF21xMessage_keypadId_set(swigCPtr, value);
    } 
    get {
      int ret = rf21xPINVOKE.RF21xMessage_keypadId_get(swigCPtr);
      return ret;
    } 
  }

  public string data {
    set {
      rf21xPINVOKE.RF21xMessage_data_set(swigCPtr, value);
      if (rf21xPINVOKE.SWIGPendingException.Pending) throw rf21xPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = rf21xPINVOKE.RF21xMessage_data_get(swigCPtr);
      if (rf21xPINVOKE.SWIGPendingException.Pending) throw rf21xPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public RF21xMessageRawData rawData {
    set {
      rf21xPINVOKE.RF21xMessage_rawData_set(swigCPtr, RF21xMessageRawData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = rf21xPINVOKE.RF21xMessage_rawData_get(swigCPtr);
      RF21xMessageRawData ret = (cPtr == global::System.IntPtr.Zero) ? null : new RF21xMessageRawData(cPtr, false);
      return ret;
    } 
  }

  public RF21xMessage() : this(rf21xPINVOKE.new_RF21xMessage(), true) {
  }

}
